// Design for the system / program

1. main.cpp
    Responsibilities
        1. Calling a class to read csv file with the weather for the coming days
        2. Take the matrix from the function above and pass into a class
            -> This class breaks the matrix into weekends and weekdays and calls the respective
                Weekdays, or Weekends classes to analyse and produce an output that we pass back to the calling class
        3. prints out the schedule produced

2. ReadingCSV {Class}
    Responsibilities
        1. check csv exists (bool)
        2. read csv into a matrix (void)
        3. getmatrix, returns the matrix (string function)

    Behaviours
        1. csvexists() {bool}: returns true if file exists in directory, else returns false
        2. checklength() {void}: checks the amnt of lines in the csv, so we can initialise a matrix
        3. readcsv() {void}: reads the file and saves it into the string matrix that is instantiated in constructor of class
        4. getmatrix() {string}: returns a pointer to the first object in the matrix

3. InterpretingCSV() {Class}
    Responsibilities
        1. Take the pointer to the first element of the matrix and iterate over every line in the matrix
        2. check if the first element in the subset of the matrix (i.e row), is a weekend or weekdays
            if a weekday call the Weekdays class, else Weekends class
        3. return schedule created by the classes as a string

    Behaviours
        1. checkingdays() {void}: updates the schedule property in the class
            calls either the Weekdays or Weekends class
        2. getschedule() {string}: returns the schedule

4. Weekends and Weekdays() {classes}
    inherit from each other main functions
    
    Responsibilities:
        1. Take the current row and produce a timeslot, or multiple timeslots of when Frikki can be walked
        2. return this timeslot
    
    * note:
        Best way to go about doing this timeslot and initialisation?:
            Would it be to initialise an array of objects and then just change the timeslot of each and return this timeslot
            could I create a collective array returning the timeslots of each individual object:
                Store that as a function in the InterpretingCSV class:
                    definitely could

    Behaviour:
        constructor(): initialises a pointer in the heap for the timeslot(s)
        derivetimeslot(row) {void}: sets the timeslot(s) property of the class
        gettimeslot() {int*}: returns a pointer to the timeslot
        destructor(): deletes timeslot

5. add gui to display schedule if timeslot
    1. create headers initiated from csv that takes the days
    2. create boxes to store the schedule / timeslot
    3. store values into boxes
    4. show to user


6. Take values of the coming weeks' temp from internet:
    1. establish tcp/ip connection
    2. authenticate
    3. recieve package
    4. html parser
    5. output html to csv
