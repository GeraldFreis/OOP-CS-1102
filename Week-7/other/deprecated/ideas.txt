sfml address:
/opt/homebrew/Cellar/sfml/2.5.1_1
to compile:
g++ main.cpp -I/opt/homebrew/Cellar/sfml/2.5.1_1/include/ -L//opt/homebrew/Cellar/sfml/2.5.1_1/lib -lsfml-graphics -lsfml-window -lsfml-system

Concept:
Program that takes the weather from the web, and produces a schedule for walking my dog
-> schedule is based upon a couple of constraints:
1. must be before dark in winter
2. can not be an hour either side of dinner (6 o'clock at night)
3. can occur in the morning on weekends
4. can not occur in the morning on weekdays
5. day can not be exceedingly windy {frikki based constraint}
6. min walk size is 15 minutes {frikki based constraint}
7. max walk size is 45 minutes {frikki based constraint}

Behaviour of code
* take weather from web:
-> How to accomplish?
    1. create a program that can download html from the bom website
    2. create a program that converts this, if it is not legible, to a text file with a couple of columns
    -> column 1: date, column 2: lowesttemp, column 3: highesttemp, column 4: wind, column 5: rain + times

* take the data and manipulate it:
    1. reads in the data and checks conditionals and then prints an output for the coming week

* if time have a ui

Deconstruction in terms of OOP pillars (i.e. encapsulation, inheritance, polymorphism and abstraction)
1. encapsulation is easy to manage
2. inheritance between days of the week and the weekends
3. polymorphism in suggesting what times to take frikki for a walk:
i.e data and type of data determines outcome (polymorphism)
4. abstraction will come in when I see my shitshow of code and want to clean it up

Deconstruction raw OOP:
1. class for retrieiving html 
2. Class for parsing and cleaning html into text uses inheritance from a reading html method in 1.
3. class for reading data and producing an outcome
-> 3. class for weekends and weekdays


Continuation and problems:
* we need to ping the website at 134.178.64.211
-> ask for packages after our tcp/ip is established
and if we get a 200 ok we can proceed
